// Code generated by protoc-gen-gomeet-service. DO NOT EDIT.
// source: pb/api-gateway.proto
package service

import (
	// SUB-SERVICES DEFINITION : import-Client
	// svc{{SubServiceNamePascalCase}}Client "github.com/gomeet-examples/svc-{{SubServiceNameKebabCase}}/client"
	svcEchoClient "github.com/gomeet-examples/svc-echo/client"
	svcProfileClient "github.com/gomeet-examples/svc-profile/client"
	// END SUB-SERVICES DEFINITION : import-client
)

const grpcTimeout = 5

// SUB-SERVICES DEFINITION : func-init
//initEchoClient initializes the gRPC client connecting to the "svc-echo" service.
func (s *apiGatewayServer) initEchoClient() error {
	if s.svcEchoGrpcClient != nil {
		return nil
	}

	cli, err := svcEchoClient.NewGomeetClient(
		s.svcEchoAddress,
		grpcTimeout,
		s.caCertificate,
		s.certificate,
		s.privateKey,
	)

	if err != nil {
		return err
	}

	s.svcEchoGrpcClient = cli.GetGRPCClient()

	return nil
}

//initProfileClient initializes the gRPC client connecting to the "svc-profile" service.
func (s *apiGatewayServer) initProfileClient() error {
	if s.svcProfileGrpcClient != nil {
		return nil
	}

	cli, err := svcProfileClient.NewGomeetClient(
		s.svcProfileAddress,
		grpcTimeout,
		s.caCertificate,
		s.certificate,
		s.privateKey,
	)

	if err != nil {
		return err
	}

	s.svcProfileGrpcClient = cli.GetGRPCClient()

	return nil
}

// END SUB-SERVICES DEFINITION : func-init
